// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RebelTours.Persistence.RebelsDbContext;

namespace RebelTours.Persistence.Migrations
{
    [DbContext(typeof(RebelToursDbContext))]
    partial class RebelToursDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RebelTours.Domain.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusModelId")
                        .HasColumnType("int");

                    b.Property<int>("DistanceTraveled")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationPlate")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SeatMapping")
                        .HasColumnType("int");

                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BusModelId");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BusModelId = 1,
                            DistanceTraveled = 10000,
                            RegistrationPlate = "34 GMB 36",
                            SeatMapping = 2,
                            Year = (short)2011
                        },
                        new
                        {
                            Id = 2,
                            BusModelId = 3,
                            DistanceTraveled = 10000,
                            RegistrationPlate = "34 GDT 18",
                            SeatMapping = 3,
                            Year = (short)2012
                        },
                        new
                        {
                            Id = 3,
                            BusModelId = 2,
                            DistanceTraveled = 10000,
                            RegistrationPlate = "34 ASL 422",
                            SeatMapping = 1,
                            Year = (short)1990
                        },
                        new
                        {
                            Id = 4,
                            BusModelId = 4,
                            DistanceTraveled = 10000,
                            RegistrationPlate = "34 EBG 28",
                            SeatMapping = 3,
                            Year = (short)1998
                        });
                });

            modelBuilder.Entity("RebelTours.Domain.BusManufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("BusManufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mercedes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MAN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Volvo"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Renault"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Togg"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Karsan"
                        });
                });

            modelBuilder.Entity("RebelTours.Domain.BusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusManufacturerId")
                        .HasColumnType("int");

                    b.Property<bool>("HasToilet")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("SeatCapacity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusManufacturerId");

                    b.ToTable("BusModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BusManufacturerId = 1,
                            HasToilet = true,
                            Name = "Tourismo",
                            SeatCapacity = 44,
                            Type = 2
                        },
                        new
                        {
                            Id = 2,
                            BusManufacturerId = 1,
                            HasToilet = true,
                            Name = "Travego",
                            SeatCapacity = 48,
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            BusManufacturerId = 1,
                            HasToilet = true,
                            Name = "CapaCity",
                            SeatCapacity = 52,
                            Type = 2
                        },
                        new
                        {
                            Id = 4,
                            BusManufacturerId = 4,
                            HasToilet = false,
                            Name = "Escape",
                            SeatCapacity = 26,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            BusManufacturerId = 6,
                            HasToilet = false,
                            Name = "Jett",
                            SeatCapacity = 30,
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            BusManufacturerId = 5,
                            HasToilet = true,
                            Name = "Super",
                            SeatCapacity = 34,
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            BusManufacturerId = 2,
                            HasToilet = true,
                            Name = "XLarge",
                            SeatCapacity = 48,
                            Type = 2
                        },
                        new
                        {
                            Id = 8,
                            BusManufacturerId = 5,
                            HasToilet = false,
                            Name = "Extend",
                            SeatCapacity = 30,
                            Type = 1
                        });
                });

            modelBuilder.Entity("RebelTours.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "İstanbul"
                        },
                        new
                        {
                            Id = 2,
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mersin"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Giresun"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Adana"
                        });
                });

            modelBuilder.Entity("RebelTours.Domain.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Görele Terminal"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Name = "Bolu Terminal"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Name = "Gebze Terminal"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 1,
                            Name = "Osmancık Terminal"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 4,
                            Name = "Kaynarca Terminal"
                        });
                });

            modelBuilder.Entity("RebelTours.Domain.Bus", b =>
                {
                    b.HasOne("RebelTours.Domain.BusModel", "BusModel")
                        .WithMany()
                        .HasForeignKey("BusModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusModel");
                });

            modelBuilder.Entity("RebelTours.Domain.BusModel", b =>
                {
                    b.HasOne("RebelTours.Domain.BusManufacturer", "BusManufacturer")
                        .WithMany()
                        .HasForeignKey("BusManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusManufacturer");
                });

            modelBuilder.Entity("RebelTours.Domain.Station", b =>
                {
                    b.HasOne("RebelTours.Domain.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
